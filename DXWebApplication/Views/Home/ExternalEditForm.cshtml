@{
    ViewBag.Title = "ExternalEditForm";
}

<script>

    var empid = parseInt('@ViewBag.empid');
    function _OnClick(s, e) {

        if (ExternalContractBatch.batchEditApi.HasChanges()) {
            ExternalContractBatch.UpdateEdit();
        }
        else if (SalaryAmountGridView.batchEditApi.HasChanges()) {
            SalaryAmountGridView.UpdateEdit();
        }
        else {
            submitForm();
        }
    }

    function ExternalContractBatch_OnEndCallback(s, e) {
        if (e.command == 'UPDATEEDIT') {
            if (SalaryAmountGridView.batchEditApi.HasChanges()) {
                SalaryAmountGridView.UpdateEdit();
            }
            else {
                submitForm();
            }
        }
       
    }
    function SalaryAmountGridView_OnEndCallback(s, e) {
        if (e.command == 'UPDATEEDIT') {
            if (ExternalContractBatch.batchEditApi.HasChanges()) {
                ExternalContractBatch.UpdateEdit();
            }
            else {
                submitForm();
            }
        }
        
    }

    function submitForm() {
       var formData = $("#externalEdit").serialize();
       if (empid > 0) {
           $.ajax({
               type: "POST",
               url: '@Url.Action("PartialExternalEditFormUpdate", "Home")',
               async: false,
               data: formData,
               success: function (jsReturnArgs) {
                   if (jsReturnArgs.IsSuccess) {
                       window.location.href = '@Html.Raw(@Url.Action("Employee", "Home"))';
                   }
                   else {
                       $("#errorContainer").html(jsReturnArgs.errorMessage);
                       $("#errorContainer").css("display", "block");
                   }
               },
               error: function (errorData) { onError(errorData); }
           });
       }
       else {
             $.ajax({
                 type: "POST",
                 url: '@Url.Action("PartialExternalEditFormAddNew", "Home")',
                  async:false,
                 data: formData,
                 success: function (jsReturnArgs) {
                     if (jsReturnArgs.IsSuccess) {
                         window.location.href = '@Html.Raw(@Url.Action("Employee", "Home"))';
                     }
                     else {
                         $("#errorContainer").html(jsReturnArgs.errorMessage);
                         $("#errorContainer").css("display", "block");
                     }
                 },
                 error: function (errorData) { onError(errorData); }
             });
       }
    }

    function onTabClick(s, e) {
        $("#salarybatch").show
        $("#excontractbatch").show
    }

    var rowIndex = 0;
    function SalaryAmountGridView_OnBatchEditStartEditing(s, e) {
        rowIndex = e.visibleIndex;
        var salaryamount = SalaryAmountGridView.batchEditApi.GetCellValue(rowIndex, "HRS_SAL_SalaryAmount", false);
        var startDate = SalaryAmountGridView.batchEditApi.GetCellValue(rowIndex, "HRS_SAL_StartDate", false);
        if (e.focusedColumn.fieldName == "HRS_SAL_StartDate") {
            if (salaryamount == null)
                e.cancel = true;
        }
        if (e.focusedColumn.fieldName == "HRS_SAL_EndDate") {
            if (salaryamount == null || startDate == null)
                e.cancel = true;
        }
    }

    function SalaryAmountGridView_OnBatchEditRowInserting(s, e) {
        var arr = SalaryAmountGridView.batchEditApi.GetInsertedRowIndices();
        if (arr.length != 0)
            e.cancel = true;
    }

    function HRS_SAL_SalaryAmount_OnValueChange(s, e) {
        var salaryamount = s.GetValue();
        var startDate = s.GetValue();
        if (startDate == null || startDate == "") {
            SalaryAmountGridView.batchEditApi.SetCellValue(rowIndex, "HRS_SAL_StartDate", salaryamount);
        }
    }

    function ExternalContractBatch_OnBeginCallback(s, e) {
        if (e.command === "STARTEDIT") {
            var key = s.GetRowKey(s.GetFocusedRowIndex());
            e.customArgs['ACC_EMP_ID'] = key;
        }
        e.customArgs['Command'] = e.command;

    }


    var contarctRowIndex = 0;
    function ExternalContractBatch_OnBatchEditStartEditing(s, e) {
        contarctRowIndex = e.visibleIndex;
        s.batchEditApi.SetCellValue(contarctRowIndex, "HRS_EMC_EmpID", empid);

        if (e.focusedColumn.fieldName == "HRS_EMC_Number") {
            var num = ExternalContractBatch.batchEditApi.GetCellValue(contarctRowIndex, "HRS_EMC_Number", false);
            if (num == null || num <= 0) {
                var arr = ExternalContractBatch.batchEditApi.GetRowVisibleIndices();
                var max = ExternalContractBatch.batchEditApi.GetCellValue(arr[0], "HRS_EMC_Number", false);
                for (var i = 1; i < arr.length; i++) {
                    var number = ExternalContractBatch.batchEditApi.GetCellValue(arr[i], "HRS_EMC_Number", false);
                    if (number > max) {
                        max = number;
                    }
                }
                ExternalContractBatch.batchEditApi.SetCellValue(contarctRowIndex, "HRS_EMC_Number", max + 1);
            }
            e.cancel = true;
        }
    }

</script>

<main>
    <div class="alert alert-danger" id="errorContainer" style="display:none">        
    </div>
    <h1 id="title">Employee Edit Form</h1>
    @Html.Action("PartialExternalEditForm", new { empid = ViewBag.empid, command = ViewBag.command });


</main>