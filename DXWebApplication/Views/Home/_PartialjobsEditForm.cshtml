
@using System.Web.UI.WebControls;
@{ 
    var job = (DXWebApplication.Models.JOB_JOBS)ViewBag.job;
}
@Html.DevExpress().FormLayout(flSettings =>
{
    flSettings.Name = "PopupEditFormLayout";
    flSettings.ColCount = 2;
    flSettings.Items.Add(i =>
    {
        i.FieldName = "JOB_Name";
        i.Caption = "Name1";
        i.NestedExtension().TextBox(s =>
        {
            s.Properties.ValidationSettings.RequiredField.IsRequired = true;
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            s.Properties.ValidationSettings.Display = Display.Dynamic;
            s.ShowModelErrors = true;
        });
    });
    flSettings.Items.Add(i =>
    {
        i.FieldName = "JOB_Name2";
        i.Caption = "Name2";
        i.NestedExtension().TextBox(s =>
        {

            s.Properties.ValidationSettings.RequiredField.IsRequired = true;
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            s.Properties.ValidationSettings.Display = Display.Dynamic;
            s.ShowModelErrors = true;
        });
    });
    flSettings.Items.Add(i =>
    {
        i.FieldName = "JOB_Shortcut";
        i.Caption = "Job Shortcut";
        i.NestedExtension().TextBox(s =>
        {
            s.Properties.ValidationSettings.RequiredField.IsRequired = true;
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            s.Properties.ValidationSettings.Display = Display.Dynamic;
            s.ShowModelErrors = true;
        });
    });
    flSettings.Items.Add(i =>
    {
        i.FieldName = "JOB_Number";
        i.Caption = "Job Number";
        i.NestedExtension().SpinEdit(s =>
        {
            s.Properties.MinValue = 1;
            s.Properties.MaxValue = 100;
            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            s.Properties.ValidationSettings.Display = Display.Dynamic;
            s.ShowModelErrors = true;
            s.Width = Unit.Percentage(100);

        });
    });
    flSettings.Items.Add(i =>
    {
        i.FieldName = "JOB_Gender";
        i.Caption = "Gender";
        i.NestedExtension().ComboBox(combobox =>
        {
            combobox.Properties.TextField = "key";
            combobox.Properties.ValueField = "value";
            combobox.Properties.ValueType = typeof(int);
            combobox.Properties.DataSource = DXWebApplication.Models.GenderCollection.Gender;
        });
    });
    //upload
    flSettings.Items.Add(i =>
    {
        i.ShowCaption = DefaultBoolean.False;
        i.SetNestedContent(() =>
        {
            using (Html.BeginForm(new { @class = "upload" }))
            {
                Html.DevExpress().UploadControl(settings =>
                {
                    settings.Name = "ucMultiSelection";
                    settings.CallbackRouteValues = new { Controller = "Home", Action = "MultiSelectionImageUpload" };

                    settings.Width = Unit.Percentage(100);
                    settings.ShowProgressPanel = true;
                    settings.AdvancedModeSettings.EnableMultiSelect = true;
                    settings.AdvancedModeSettings.EnableFileList = true;
                    settings.AdvancedModeSettings.EnableDragAndDrop = true;
                    settings.NullText = "Select multiple files...";
                    settings.AutoStartUpload = true;
                    settings.ValidationSettings.Assign(DXWebApplication.Models.JOB_JOBS.UploadValidationSettings);
                    settings.ClientSideEvents.FileUploadComplete = "function(s,e) { OnFileUploadComplete(e); }";
                }).GetHtml();
                ViewContext.Writer.Write("<div id='linkContainer'>");//container
                if (job != null && job.JOB_FileName != null)
                {
                    ViewContext.Writer.Write("<a href='DownloadFile'>" + job.JOB_FileName + "</a>");
                }
                ViewContext.Writer.Write("</div>");
            }
        });
    });
    //buttons
    flSettings.Items.Add(i =>
    {
        i.ShowCaption = DefaultBoolean.False;
        i.SetNestedContent(() =>
        {
            ViewContext.Writer.Write("<div style='float:right'> ");
            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnUpdate";
                btnSettings.Text = "Save";
                btnSettings.ClientSideEvents.Click = "function(s,e){ jobsGridView.UpdateEdit(); }";
            }).Render();
            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnCancel";
                btnSettings.Text = "Cancel";
                btnSettings.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                btnSettings.ClientSideEvents.Click = "function(s, e){ jobsGridView.CancelEdit(); }";
            }).Render();
            ViewContext.Writer.Write("</div>");
        });
    });

}).Bind(job).GetHtml()

