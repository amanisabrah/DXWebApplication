@*@model List<WebApplication1.Models.JOB_JOBS>;*@

@using System.Web.UI.WebControls;

@Html.DevExpress().GridView(settings =>
{
    settings.Name = "gvFocusedRow";
    settings.CallbackRouteValues = new { Controller = "Home", Action = "PartialJobsGridView" };
    settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Home", Action = "PartialJobsGridViewAddNew" };
    settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Home", Action = "EditModesUpdatePartial" };
    settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Home", Action = "EditModesDeletePartial" };
    settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
    settings.SettingsBehavior.ConfirmDelete = true;
    settings.SettingsPopup.EditForm.Width = 600;
    settings.Width = Unit.Percentage(100);

    settings.SettingsPopup.EditForm.SettingsAdaptivity.Mode = PopupControlAdaptivityMode.OnWindowInnerWidth;
    settings.SettingsPopup.EditForm.SettingsAdaptivity.SwitchAtWindowInnerWidth = 768;
    settings.EditFormLayoutProperties.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
    settings.EditFormLayoutProperties.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 700;
    settings.EditFormLayoutProperties.SettingsItems.VerticalAlign = FormLayoutVerticalAlign.Middle;
    settings.Settings.ShowFilterBar = GridViewStatusBarMode.Visible;
    settings.Settings.ShowFilterRow = true;

    settings.KeyFieldName = "JOB_ID";
    settings.CommandColumn.Visible = true;
    settings.CommandColumn.ShowNewButton = true;
    settings.CommandColumn.ShowDeleteButton = true;
    settings.CommandColumn.ShowEditButton = true;

    settings.Columns.Add(c =>
    {
        c.FieldName = "JOB_Name";
        c.Caption = "Name1";
    });


    settings.Columns.Add(c =>
    {
        c.FieldName = "JOB_Name2";
        c.Caption = "Name2";
    });


    settings.Columns.Add(c =>
    {
        c.FieldName = "JOB_Shortcut";
        c.Caption = "Job Shortcut";
    });


    settings.Columns.Add(c =>
    {
        c.FieldName = "JOB_Number";
        c.Caption = "Job Number";
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "JOB_Gender";
        c.Caption = "Gender";
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "JOB_IsDeleted";
        c.Caption = "Is Deleted?";
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "JOB_EntryDate";
        c.Caption = "Entry Date";
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "JOB_UpdateDate";
        c.Caption = "Update Date";
    });

    settings.Columns.Add(c =>
    {
        c.FieldName = "JOB_DeleteDate";
        c.Caption = "Delete Date";
    });


    settings.SetEditFormTemplateContent(c =>
    {
        Html.DevExpress().FormLayout(flSettings =>
        {
            flSettings.Name = "PopupEditFormLayout";
            flSettings.ColCount = 2;
            flSettings.Items.Add(i =>
            {
                i.FieldName = "JOB_Name";
                i.Caption = "Name1";
                i.NestedExtension().TextBox(s =>
                {
                    s.Properties.ValidationSettings.RequiredField.IsRequired = true;
                });
            });

            flSettings.Items.Add(i =>
            {
                i.FieldName = "JOB_Name2";
                i.Caption = "Name2";
                i.NestedExtension().TextBox(s =>
                {

                });
            });

            flSettings.Items.Add(i =>
            {
                i.FieldName = "JOB_ShortCut";
                i.Caption = "Job Shortcut";
                i.NestedExtension().TextBox(s =>
                {

                });
            });


            flSettings.Items.Add(i =>
            {
                i.FieldName = "JOB_Number";
                i.Caption = "Job Number";
                i.NestedExtension().SpinEdit(s =>
                {
                    s.Properties.MinValue = 100;
                    s.Properties.MaxValue = 130;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.Display = Display.Dynamic;
                    s.ShowModelErrors = true;
                    s.Width = Unit.Percentage(100);

                });
            });

            flSettings.Items.Add(i =>
            {
                i.FieldName = "JOB_Gender";
                i.Caption = "Gender";
                i.NestedExtension().ComboBox(s =>
                {

                });
            });

            flSettings.Items.Add(i =>
            {
                i.FieldName = "JOB_Deleted";
                i.Caption = "Is Deleted?";
                i.NestedExtension().CheckBox(s =>
                {
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.Display = Display.Dynamic;
                    s.ShowModelErrors = true;

                });
            });

            flSettings.Items.Add(i =>
            {
                i.FieldName = "JOB_EntryDate";
                i.Caption = "Entry Date";
                i.NestedExtension().DateEdit(s =>
                {
                    s.Properties.DisplayFormatString = "d";
                });
            });

            flSettings.Items.Add(i =>
            {
                i.FieldName = "JOB_UpdateDate";
                i.Caption = "Update Date";
                i.NestedExtension().DateEdit(s =>
                {
                    s.Properties.DisplayFormatString = "d";
                });
            });

            flSettings.Items.Add(i =>
            {
                i.FieldName = "JOB_DeleteDate";
                i.Caption = "Delete Date";
                i.NestedExtension().DateEdit(s =>
                {
                    s.Properties.DisplayFormatString = "d";
                });
            });


            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnUpdate";
                btnSettings.Text = "ADD";
                btnSettings.ClientSideEvents.Click = "function(s){ gvEditingWithTemplate.UpdateEdit(); }";
            }).Render();

            Html.DevExpress().Button(btnSettings =>
            {
                btnSettings.Name = "btnCancel";
                btnSettings.Text = "Cancel";
                btnSettings.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                btnSettings.ClientSideEvents.Click = "function(s, e){ gvEditingWithTemplate.CancelEdit(); }";
            }).Render();




        }).Bind(c.Grid.GetRowValues(c.VisibleIndex, "JOB_ID")).Render(); // Bind with data from the row being edited
    });

}).Bind(Model).GetHtml()



