
@{
    ViewBag.Title = "Jobs";
}

<script>
    function OnBeginCallback(s, e) {
        if (e.command === "STARTEDIT") {
            var key = s.GetRowKey(s.GetFocusedRowIndex());
            e.customArgs['JOB_ID'] = key;
        }
        e.customArgs['Command'] = e.command;
        e.customArgs['FilterStartDate'] = JOB_FilterEntryDate.GetText();
        e.customArgs['FilterEndDate'] = JOB_FilterDeleteDate.GetText();
        e.customArgs['FilterGender'] = JOB_FilterGender.GetValue();

    }

    function FilterButtonOnclick(s, e) {
        jobsGridView.PerformCallback();

    }
    function PopupEditFormLayout_OnSave(s, e) {
        jobsGridView.UpdateEdit();
    }

    function OnFileUploadComplete(s, e) {
        if (s.callbackData) {
            var a = document.createElement('a');
            var linkText = document.createTextNode(s.callbackData);
            a.appendChild(linkText);
            a.title = "Link";
            a.href = "@Url.Action("DownloadFile", "Home"/*, new { id = "id" }*/)";
            var div = document.getElementById('linkContainer');
            div.appendChild(a);
        }
    }

    function OnToolbarItemClick(s, e) {

        if (e.item.name == "reportButton")

        window.location.href ="@Url.Action("ViewReport", "Home"/*, new { id = "id" }*/)";

    }






</script>

<main>
    
    <form class="row" aria-labelledby="aspnetTitle">
        <h1 id="title">Jobs</h1>
        <div>@Html.Partial("_PartialJobsFilter", (DXWebApplication.Models.Job_Filter)ViewBag.Filter)</div><!-- model mvc-->>
        @Html.Action("PartialJobsGridView", new { entryDate = ViewBag.Filter.JOB_FilterEntryDate, deleteDate = ViewBag.Filter.JOB_FilterDeleteDate, Gender = ViewBag.Filter.JOB_FilterGender })
    </form>
</main>
