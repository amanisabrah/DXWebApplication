
@{
    ViewBag.Title = "Jobs";
}

<script>
    function OnBeginCallback(s, e)
    {
        if (e.command === "STARTEDIT") {
            var key = s.GetRowKey(s.GetFocusedRowIndex());
            e.customArgs['JOB_ID'] = key;
        }
        e.customArgs['Command'] = e.command;
        e.customArgs['FilterStartDate'] = JOB_FilterEntryDate.GetText();
        e.customArgs['FilterEndDate'] = JOB_FilterDeleteDate.GetText();
        e.customArgs['FilterGender'] = JOB_FilterGender.GetValue();

    }

    function FilterButtonOnclick(s, e) {
        jobsGridView.PerformCallback();

    }
    function PopupEditFormLayout_OnSave(s, e) {
        jobsGridView.UpdateEdit();
    }

    function onFileUploadComplete(s, e) {
        var data = e.callbackData.split('|');
        for (var i = 0; i < data.length; i += 2) {
            var file = data[i];
            var url = data[i + 1];
            var link = document.createElement('A');
            link.innerHTML = file;
            link.setAttribute('href', url);
            link.setAttribute('target', '_blank');
            var fileContainer = document.getElementById('fileContainer');
            fileContainer.appendChild(link);
            fileContainer.appendChild(document.createElement('BR'));
        }
    }  

</script>

<main>

    
    <section class="row" aria-labelledby="aspnetTitle">
        <h1 id="title">Jobs</h1>
        <div>@Html.Partial("_PartialJobsFilter", (DXWebApplication.Models.Job_Filter)ViewBag.Filter)</div>
        @Html.Action("PartialJobsGridView", new { entryDate = ViewBag.Filter.JOB_FilterEntryDate, deleteDate = ViewBag.Filter.JOB_FilterDeleteDate, Gender = ViewBag.Filter.JOB_FilterGender })
    </section>
</main>
